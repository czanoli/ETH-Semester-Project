- Occhio al layer number: usa il numero 9 attualmente [credo sia ok, anche se il layer 18 era il migliore]
- Occhio alla versione di DINOv2, attualmente i risultati hanno usato vits14-reg invece dovresti usate vitb14 dal moento in cui il fit3d infused usa dinov2:base:fine
    -- Ri runna la pipeline con lmo vanilla assicurandoti che sia il lmo.json del gen_repre.py che dell' infer.py abbia: "extractor_name": "dinov2_version=vitb14_stride=14_facet=token_layer=9_logbin=0_norm=1",
- Rerun test image gahtering and results (bop1924 not all test images) because in foundpose results are referred to those only

- Occhio che per fare il debug hai modificato le json configs nel seguente modo:
    -- in configs/gen_templates:
        --- "object_lids": [1]
        --- "crop_size": [224, 224]
    -- in configs/gen_repre:
        --- "object_lids": [1]
    -- in configs/infer:
        --- "crop_size": [
            224,
            224
        ]


>> Results for debugging strategy 1 and 2:

Query template: 392
____________________________________________________
-- cosine
Removing []:
Matched templates: [392 (best), 574, 462, 504, 280]
MSSD error: 0.07512012856414313
MSPD error : 0.006183439230107032

-- RoPE100
Removing []:
Matched templates: [392 (best), 574, 462, 504, 280]
MSSD error: 0.07512012856414313
MSPD error : 0.006183439230107032
____________________________________________________
-- cosine
Removing [392]:
Matched templates: [573, 461, 503, 280 (best), 574]
MSSD error: 69.92804745201619
MSPD error : 12.334418661111533

-- RoPE100
Removing [392]:
Matched templates: [573, 461, 503, 280 (best), 574]
MSSD error:  69.92804745201619
MSPD error : 12.334418661111533
____________________________________________________
-- cosine
Removing [392, 280]:
Matched templates: [572, 460, 502, 573, 403 (best)]
MSSD error: 295.26353268318144
MSPD error : 133.11173987033666

-- RoPE100
Removing [392, 280]:
Matched templates: [572, 460, 502, 573, 403 (best)]
MSSD error: 295.26353268318144
MSPD error : 133.11173987033666
____________________________________________________
-- cosine
Removing [392, 280, 403]:
Matched templates: [571, 459, 501, 572, 402 (best)]
MSSD error: 401.53918524443833
MSPD error : 181.12709440539618

-- RoPE100
Removing [392, 280, 403]:
Matched templates: [571, 459, 501, 572, 402 (best)]
MSSD error: 401.53918524443833
MSPD error : 181.12709440539618
____________________________________________________
-- cosine
Removing [392, 280, 403, 402]:
Matched templates: [570, 458, 500, 571, 401 (best)]
MSSD error: 439.6859977520146
MSPD error : 195.7457669219908

-- RoPE100
Removing [392, 280, 403, 402]:
Matched templates: [570, 458, 500, 571, 401 (best)]
MSSD error: 439.6859977520146
MSPD error : 195.7457669219908
____________________________________________________
-- cosine
Removing [392, 280, 403, 402, 401]:
Matched templates: [569, 457, 499, 570 (best), 400]
MSSD error: 540.7127538731135
MSPD error : 225.31892996039323

-- RoPE100
Removing [392, 280, 403, 402, 401]:
Matched templates: [569, 457, 499, 570 (best), 400]
MSSD error: 540.7127538731135
MSPD error : 225.31892996039323
____________________________________________________



###########  debug with background  #############

Query template: 392
Note: at every run the random noise is different
Note: in realimage mode, the background is a constant real image that doesn't change between runs
____________________________________________________
-- random noise
Removing []:
Matched templates: [789, 715 (best), 144, 323, 222]
MSSD error: 136.28845242053845, id: 1217
MSPD error : 97.32239288190269, id: 2690
Is template proposal stable: no
Are MSSD & MSPD stable: no

-- realimage
Removing []:
Matched templates: [392 (best), 644, 574, 575, 687]
MSSD error: 0.07512220959434886, id: 2772
MSPD error : 0.006183717834137225, id: 5809
Is template proposal stable: yes
Are MSSD & MSPD stable: yes
____________________________________________________
-- random noise
Removing [715]:
Matched templates: [61, 323, 788, 721, 144 (best)]
MSSD error: 384.9988639511348, id: 272
MSPD error : 141.21509558154526, id: 5765
Is template proposal stable: no
Are MSSD & MSPD stable: no

-- realimage
Removing [392]:
Matched templates: [643, 573, 574 (best), 686, 694]
MSSD error: 283.1255727767937, id: 135
MSPD error : 137.41929509170055, id: 1478
Is template proposal stable: yes
Are MSSD & MSPD stable: yes
____________________________________________________
-- noise
Removing [715, 144]:
Matched templates: [787, 322, 391, 220, 504 (best)]
MSSD error: 110.62091871498914, id: 4284
MSPD error : 90.43863897664802, id: 2046
Is template proposal stable: no
Are MSSD & MSPD stable: no

-- realimage
Removing [392, 574]:
Matched templates: [642 (best), 573, 685, 693, 580]
MSSD error: 460.6728232895545, id: 5056
MSPD error : 168.73063720140752, id: 784
Is template proposal stable: yes
Are MSSD & MSPD stable: yes
____________________________________________________
-- noise
Removing [715, 144, 504]:
Matched templates: [786, 322, 292, 757, 715]
No associated feature vectors
Is template proposal stable: no
Are MSSD & MSPD stable: no

-- realimage
Removing [392, 574, 642]:
Matched templates: [641 (best), 573, 684, 692, 580]
MSSD error: 198.58347069294976, id: 5084
MSPD error : 117.92533752679114, id: 3854
Is template proposal stable: yes
Are MSSD & MSPD stable: yes
____________________________________________________


[760, 466, 473, 648, 586]
 MSSD error: 87.59123324730587, id: 1234
I0401 13:10:23.854 48351 eval_util.py:165] MSPD error : 185.04604873305126, id: 4663


Matched templates: [574, 686, 769, 657, 760]
Number of corresp: [204, 204, 204, 204, 204]
I0401 13:32:01.418 50354 eval_util.py:157] MSSD error: 13.448917115282228, id: 780
I0401 13:32:01.418 50354 eval_util.py:165] MSPD error : 23.587273191399174, id: 86


------ next steps:
1) run gen_repre.py to create nwe representations (with both the current version of croco but also the ViT Large, which is crocov2), 
the config is already fine
2) make sure infer is fine, for example the folder tun_xx created, the 2 visualization saved,
etc.. you need to change it back so that if get the vis results in the default folder
3) run infer (both croco v1 ViTase and crocov2 ViT Large)
4) run evaluate

--> with ViT Large:
INFO:eval_bop19_pose:FINAL SCORES:
INFO:eval_bop19_pose:- bop19_average_recall_vsd: 0.04872664359861591
INFO:eval_bop19_pose:- bop19_average_recall_mssd: 0.0554325259515571
INFO:eval_bop19_pose:- bop19_average_recall_mspd: 0.14380622837370244
INFO:eval_bop19_pose:- bop19_average_recall: 0.08265513264129182
INFO:eval_bop19_pose:- bop19_average_time_per_image: 1.8464160132408143
INFO:eval_bop19_pose:Evaluation took 21.566771984100342s.
INFO:eval_bop19_pose:Done.


---- 02.04.2025 TODO
Fare summary delle dimensioni (H,W,C) di tutti i layer di: DINOv2, CroCov1, crocov2
Notes: with DINOv2 use 420x420 image, with CroCo use 480x480


--------------  CroCo_V2_ViTBase_SmallDecoder  --------------
-------------------------------------------------------------
Encoder block 0 output: (B=1, N=900, C=768) => (B, C, 30, 30)
Encoder block 1 output: (B=1, N=900, C=768) => (B, C, 30, 30)
Encoder block 2 output: (B=1, N=900, C=768) => (B, C, 30, 30)
Encoder block 3 output: (B=1, N=900, C=768) => (B, C, 30, 30)
Encoder block 4 output: (B=1, N=900, C=768) => (B, C, 30, 30)
Encoder block 5 output: (B=1, N=900, C=768) => (B, C, 30, 30)
Encoder block 6 output: (B=1, N=900, C=768) => (B, C, 30, 30)
Encoder block 7 output: (B=1, N=900, C=768) => (B, C, 30, 30)
Encoder block 8 output: (B=1, N=900, C=768) => (B, C, 30, 30)
Encoder block 9 output: (B=1, N=900, C=768) => (B, C, 30, 30)
Encoder block 10 output: (B=1, N=900, C=768) => (B, C, 30, 30)
Encoder block 11 output: (B=1, N=900, C=768) => (B, C, 30, 30)
-------------------------------------------------------------
Decoder block 0 output: (B=1, N=900, C=512) => (B, C, 30, 30)
Decoder block 1 output: (B=1, N=900, C=512) => (B, C, 30, 30)
Decoder block 2 output: (B=1, N=900, C=512) => (B, C, 30, 30)
Decoder block 3 output: (B=1, N=900, C=512) => (B, C, 30, 30)
Decoder block 4 output: (B=1, N=900, C=512) => (B, C, 30, 30)
Decoder block 5 output: (B=1, N=900, C=512) => (B, C, 30, 30)
Decoder block 6 output: (B=1, N=900, C=512) => (B, C, 30, 30)
Decoder block 7 output: (B=1, N=900, C=512) => (B, C, 30, 30)
-------------------------------------------------------------


--------------  CroCo_V2_ViTBase_BaseDecoder  ---------------
-------------------------------------------------------------
Encoder block 0 output: (B=1, N=900, C=768) => (B, C, 30, 30)
Encoder block 1 output: (B=1, N=900, C=768) => (B, C, 30, 30)
Encoder block 2 output: (B=1, N=900, C=768) => (B, C, 30, 30)
Encoder block 3 output: (B=1, N=900, C=768) => (B, C, 30, 30)
Encoder block 4 output: (B=1, N=900, C=768) => (B, C, 30, 30)
Encoder block 5 output: (B=1, N=900, C=768) => (B, C, 30, 30)
Encoder block 6 output: (B=1, N=900, C=768) => (B, C, 30, 30)
Encoder block 7 output: (B=1, N=900, C=768) => (B, C, 30, 30)
Encoder block 8 output: (B=1, N=900, C=768) => (B, C, 30, 30)
Encoder block 9 output: (B=1, N=900, C=768) => (B, C, 30, 30)
Encoder block 10 output: (B=1, N=900, C=768) => (B, C, 30, 30)
Encoder block 11 output: (B=1, N=900, C=768) => (B, C, 30, 30)
-------------------------------------------------------------
Decoder block 0 output: (B=1, N=900, C=768) => (B, C, 30, 30)
Decoder block 1 output: (B=1, N=900, C=768) => (B, C, 30, 30)
Decoder block 2 output: (B=1, N=900, C=768) => (B, C, 30, 30)
Decoder block 3 output: (B=1, N=900, C=768) => (B, C, 30, 30)
Decoder block 4 output: (B=1, N=900, C=768) => (B, C, 30, 30)
Decoder block 5 output: (B=1, N=900, C=768) => (B, C, 30, 30)
Decoder block 6 output: (B=1, N=900, C=768) => (B, C, 30, 30)
Decoder block 7 output: (B=1, N=900, C=768) => (B, C, 30, 30)
Decoder block 8 output: (B=1, N=900, C=768) => (B, C, 30, 30)
Decoder block 9 output: (B=1, N=900, C=768) => (B, C, 30, 30)
Decoder block 10 output: (B=1, N=900, C=768) => (B, C, 30, 30)
Decoder block 11 output: (B=1, N=900, C=768) => (B, C, 30, 30)
-------------------------------------------------------------


--------------  CroCo_V2_ViTLarge_BaseDecoder  --------------
-------------------------------------------------------------
Encoder block 0 output: (B=1, N=900, C=1024) => (B, C, 30, 30)
Encoder block 1 output: (B=1, N=900, C=1024) => (B, C, 30, 30)
Encoder block 2 output: (B=1, N=900, C=1024) => (B, C, 30, 30)
Encoder block 3 output: (B=1, N=900, C=1024) => (B, C, 30, 30)
Encoder block 4 output: (B=1, N=900, C=1024) => (B, C, 30, 30)
Encoder block 5 output: (B=1, N=900, C=1024) => (B, C, 30, 30)
Encoder block 6 output: (B=1, N=900, C=1024) => (B, C, 30, 30)
Encoder block 7 output: (B=1, N=900, C=1024) => (B, C, 30, 30)
Encoder block 8 output: (B=1, N=900, C=1024) => (B, C, 30, 30)
Encoder block 9 output: (B=1, N=900, C=1024) => (B, C, 30, 30)
Encoder block 10 output: (B=1, N=900, C=1024) => (B, C, 30, 30)
Encoder block 11 output: (B=1, N=900, C=1024) => (B, C, 30, 30)
Encoder block 12 output: (B=1, N=900, C=1024) => (B, C, 30, 30)
Encoder block 13 output: (B=1, N=900, C=1024) => (B, C, 30, 30)
Encoder block 14 output: (B=1, N=900, C=1024) => (B, C, 30, 30)
Encoder block 15 output: (B=1, N=900, C=1024) => (B, C, 30, 30)
Encoder block 16 output: (B=1, N=900, C=1024) => (B, C, 30, 30)
Encoder block 17 output: (B=1, N=900, C=1024) => (B, C, 30, 30)
Encoder block 18 output: (B=1, N=900, C=1024) => (B, C, 30, 30)
Encoder block 19 output: (B=1, N=900, C=1024) => (B, C, 30, 30)
Encoder block 20 output: (B=1, N=900, C=1024) => (B, C, 30, 30)
Encoder block 21 output: (B=1, N=900, C=1024) => (B, C, 30, 30)
Encoder block 22 output: (B=1, N=900, C=1024) => (B, C, 30, 30)
Encoder block 24 output: (B=1, N=900, C=1024) => (B, C, 30, 30)
-------------------------------------------------------------
Decoder block 0 output: (B=1, N=900, C=768) => (B, C, 30, 30)
Decoder block 1 output: (B=1, N=900, C=768) => (B, C, 30, 30)
Decoder block 2 output: (B=1, N=900, C=768) => (B, C, 30, 30)
Decoder block 3 output: (B=1, N=900, C=768) => (B, C, 30, 30)
Decoder block 4 output: (B=1, N=900, C=768) => (B, C, 30, 30)
Decoder block 5 output: (B=1, N=900, C=768) => (B, C, 30, 30)
Decoder block 6 output: (B=1, N=900, C=768) => (B, C, 30, 30)
Decoder block 7 output: (B=1, N=900, C=768) => (B, C, 30, 30)
Decoder block 8 output: (B=1, N=900, C=768) => (B, C, 30, 30)
Decoder block 9 output: (B=1, N=900, C=768) => (B, C, 30, 30)
Decoder block 10 output: (B=1, N=900, C=768) => (B, C, 30, 30)
Decoder block 11 output: (B=1, N=900, C=768) => (B, C, 30, 30)
-------------------------------------------------------------



-------- DINOv2: image size 420x420, patch_size = 14 --------

---------------  DINOv2 (vits14, vits14-reg) ----------------
-------------------------------------------------------------
Layer [1]: Patch Resolution = (30, 30) (num_patches_h, num_patches_w)
Layer [1]: Spatial Resolution = (420, 420, 384) (H, W, C)

Layer [2]: Patch Resolution = (30, 30) (num_patches_h, num_patches_w)
Layer [2]: Spatial Resolution = (420, 420, 384) (H, W, C)

Layer [3]: Patch Resolution = (30, 30) (num_patches_h, num_patches_w)
Layer [3]: Spatial Resolution = (420, 420, 384) (H, W, C)

Layer [4]: Patch Resolution = (30, 30) (num_patches_h, num_patches_w)
Layer [4]: Spatial Resolution = (420, 420, 384) (H, W, C)

Layer [5]: Patch Resolution = (30, 30) (num_patches_h, num_patches_w)
Layer [5]: Spatial Resolution = (420, 420, 384) (H, W, C)

Layer [6]: Patch Resolution = (30, 30) (num_patches_h, num_patches_w)
Layer [6]: Spatial Resolution = (420, 420, 384) (H, W, C)

Layer [7]: Patch Resolution = (30, 30) (num_patches_h, num_patches_w)
Layer [7]: Spatial Resolution = (420, 420, 384) (H, W, C)

Layer [8]: Patch Resolution = (30, 30) (num_patches_h, num_patches_w)
Layer [8]: Spatial Resolution = (420, 420, 384) (H, W, C)

Layer [9]: Patch Resolution = (30, 30) (num_patches_h, num_patches_w)
Layer [9]: Spatial Resolution = (420, 420, 384) (H, W, C)

Layer [10]: Patch Resolution = (30, 30) (num_patches_h, num_patches_w)
Layer [10]: Spatial Resolution = (420, 420, 384) (H, W, C)

Layer [11]: Patch Resolution = (30, 30) (num_patches_h, num_patches_w)
Layer [11]: Spatial Resolution = (420, 420, 384) (H, W, C)


--------------  DINOv2 (vitb14, vitb14-reg) -----------------
-------------------------------------------------------------
Same as above, but feature depth is 768 instead of 384
Blocks: [0, 1, ... 10, 11]

--------------  DINOv2 (vitl14, vitl14-reg) -----------------
-------------------------------------------------------------
Same as above, but feature depth is 1024 instead of 768
Blocks: [0, 1, ... 23, 24]

--------------  DINOv2 (vitg14, vitg14-reg) -----------------
-------------------------------------------------------------
Same as above, but feature depth is 1536 instead of 1024
Blocks: [0, 1, ... 38, 39]